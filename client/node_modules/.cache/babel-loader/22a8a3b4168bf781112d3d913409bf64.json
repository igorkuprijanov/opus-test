{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Me\\\\Desktop\\\\opus\\\\client\\\\src\\\\components\\\\InterfacePage.tsx\";\nimport React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport User from './User';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass InterfacePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      test: 'yes'\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await fetch(`http://localhost:4000/allUsers`, {\n        method: 'GET',\n        mode: 'cors',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        if (response.ok) {\n          return response.json().then(json => {\n            console.log(json);\n          });\n        } else if (!response.ok) {\n          throw Error(response.statusText);\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    console.log(this.props);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"interfaceContainer\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: this.props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"ur name is \", this.props.name, /*#__PURE__*/_jsxDEV(User, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default InterfacePage;","map":{"version":3,"sources":["C:/Users/Me/Desktop/opus/client/src/components/InterfacePage.tsx"],"names":["React","Container","User","InterfacePage","Component","constructor","props","state","test","componentDidMount","response","fetch","method","mode","headers","then","ok","json","console","log","Error","statusText","error","render","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,aAAN,SAA4BH,KAAK,CAACI,SAAlC,CAA2E;AAEzEC,EAAAA,WAAW,CAACC,KAAD,EAAW;AACpB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAGD;;AAEsB,QAAjBC,iBAAiB,GAAE;AACvB,QAAG;AACH,YAAMC,QAAQ,GAAI,MAAMC,KAAK,CAAE,gCAAF,EAC7B;AACEC,QAAAA,MAAM,EAAE,KADV;AAEEC,QAAAA,IAAI,EAAE,MAFR;AAGEC,QAAAA,OAAO,EAAC;AAAC,0BAAiB;AAAlB;AAHV,OAD6B,CAAL,CAMvBC,IANuB,CAMlBL,QAAQ,IAAI;AAChB,YAAGA,QAAQ,CAACM,EAAZ,EAAe;AACX,iBAAON,QAAQ,CAACO,IAAT,GACNF,IADM,CACDE,IAAI,IAAG;AACbC,YAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,WAHQ,CAAP;AAIH,SALD,MAKM,IAAG,CAACP,QAAQ,CAACM,EAAb,EAAgB;AACpB,gBAAMI,KAAK,CAACV,QAAQ,CAACW,UAAV,CAAX;AACD;AACF,OAfuB,CAAxB;AAgBD,KAjBC,CAiBD,OAAOC,KAAP,EAAa;AACZJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACD;AACA;;AAEDC,EAAAA,MAAM,GAAE;AACNL,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAjB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,6BACA,QAAC,SAAD;AAAA,gCACA;AAAA,oBAAK,KAAKA,KAAL,CAAWkB;AAAhB;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAA,oCACc,KAAKlB,KAAL,CAAWkB,IADzB,eAEE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AA7CwE;;AAgD3E,eAAerB,aAAf","sourcesContent":["import React from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\nimport User from './User'\r\n\r\nclass InterfacePage extends React.Component<{name: string},{test: string}> {\r\n\r\n  constructor(props:any){\r\n    super(props)\r\n    this.state = {\r\n      test: 'yes'\r\n    }\r\n  }\r\n\r\n  async componentDidMount(){\r\n    try{\r\n    const response =  await fetch(`http://localhost:4000/allUsers`,\r\n    {\r\n      method: 'GET',\r\n      mode: 'cors',\r\n      headers:{'Content-Type' : 'application/json'},\r\n    })\r\n    .then(response => {\r\n      if(response.ok){\r\n          return response.json()\r\n          .then(json =>{\r\n          console.log(json)\r\n        })\r\n      }else if(!response.ok){\r\n        throw Error(response.statusText)\r\n      }\r\n    })\r\n  }catch (error){\r\n    console.log(error)\r\n  }\r\n  }\r\n\r\n  render(){\r\n    console.log(this.props)\r\n    return(\r\n      <div className='interfaceContainer'>\r\n      <Container>\r\n      <h1>{this.props.name}</h1>\r\n      <div>\r\n        ur name is {this.props.name}\r\n        <User/>\r\n      </div>\r\n      </Container>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default InterfacePage\r\n"]},"metadata":{},"sourceType":"module"}