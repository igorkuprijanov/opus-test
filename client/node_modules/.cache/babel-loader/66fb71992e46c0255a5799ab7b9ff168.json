{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Me\\\\Desktop\\\\opus\\\\client\\\\src\\\\components\\\\InterfacePage.tsx\";\nimport React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport User from './User';\nimport Button from 'react-bootstrap/Button';\nimport Pupup from './Pupup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass InterfacePage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.popup = (type, name) => {\n      if (name !== undefined) {\n        this.setState({\n          userName: name\n        });\n      }\n\n      this.props.popup(type);\n    };\n\n    this.state = {\n      users: [],\n      userName: ''\n    };\n    this.popup = this.popup.bind(this);\n  }\n\n  async componentDidMount() {\n    try {\n      await fetch(`http://localhost:4000/allUsers`, {\n        method: 'GET',\n        mode: 'cors',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        if (response.ok) {\n          return response.json().then(json => {\n            this.setState({\n              users: json\n            });\n          });\n        } else if (!response.ok) {\n          throw Error(response.statusText);\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"interfaceContainer\",\n      children: [this.props.openPopup ? /*#__PURE__*/_jsxDEV(Pupup, {\n        userName: this.state.userName,\n        addingUser: this.props.addingUser,\n        showMessage: this.props.showMessage,\n        sendCreateAccount: this.props.sendCreateAccount,\n        message: this.props.message,\n        closePopup: this.popup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 31\n      }, this) : null, /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"titleContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: this.props.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              this.popup('add');\n            },\n            children: \"Add user\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"usersListContainer\",\n          children: this.state.users.map(user => {\n            return /*#__PURE__*/_jsxDEV(User, {\n              popup: this.popup,\n              name: user\n            }, user, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 49\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default InterfacePage;","map":{"version":3,"sources":["C:/Users/Me/Desktop/opus/client/src/components/InterfacePage.tsx"],"names":["React","Container","User","Button","Pupup","InterfacePage","Component","constructor","props","popup","type","name","undefined","setState","userName","state","users","bind","componentDidMount","fetch","method","mode","headers","then","response","ok","json","Error","statusText","error","console","log","render","openPopup","addingUser","showMessage","sendCreateAccount","message","map","user"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\nimport User from './User'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Pupup from './Pupup'\r\n\r\nclass InterfacePage extends React.Component<{deleteUser: (name: string) => void, popup: (type: string)=>void, addingUser: boolean, name: string, openPopup: boolean, showMessage: boolean, message:{head: string, body:string}, sendCreateAccount: (data: {email: string, password: string, repeatPassword: string})=>void},{users: Array<string>, userName: string}> {\r\n\r\n  constructor(props: {deleteUser: (name: string) => void, popup: (type: string)=>void, addingUser: boolean, deletingUser: boolean, name: string, openPopup: boolean, showMessage: boolean, message:{head: string, body:string}, sendCreateAccount: (data: {email: string, password: string, repeatPassword: string})=>void}){\r\n    super(props)\r\n    this.state = {\r\n      users: [],\r\n      userName: ''\r\n    }\r\n    this.popup = this.popup.bind(this)\r\n  }\r\n\r\n  popup = (type:string, name?: string) =>{\r\n    if(name !== undefined){\r\n      this.setState({userName: name})\r\n    }\r\n    this.props.popup(type)\r\n  }\r\n\r\n\r\n  async componentDidMount(){\r\n    try{\r\n    await fetch(`http://localhost:4000/allUsers`,\r\n    {\r\n      method: 'GET',\r\n      mode: 'cors',\r\n      headers:{'Content-Type' : 'application/json'},\r\n    })\r\n    .then(response => {\r\n      if(response.ok){\r\n          return response.json()\r\n          .then(json =>{\r\n          this.setState({\r\n            users: json\r\n          })\r\n        })\r\n      }else if(!response.ok){\r\n        throw Error(response.statusText)\r\n      }\r\n    })\r\n  }catch (error){\r\n    console.log(error)\r\n  }\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div className='interfaceContainer'>\r\n      {this.props.openPopup ? <Pupup userName={this.state.userName} addingUser={this.props.addingUser} showMessage={this.props.showMessage} sendCreateAccount={this.props.sendCreateAccount} message={this.props.message} closePopup={this.popup}/> : null}\r\n      <Container>\r\n      <div className='titleContainer'>\r\n      <h1>{this.props.name}</h1>\r\n      <Button onClick={(()=>{this.popup('add')})}>Add user</Button>\r\n      </div>\r\n      <div className='usersListContainer'>\r\n        {this.state.users.map((user) => {return <User popup={this.popup} key={user} name={user}/>})}\r\n      </div>\r\n      </Container>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default InterfacePage\r\n"]},"metadata":{},"sourceType":"module"}