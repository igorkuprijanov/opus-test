{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Me\\\\Desktop\\\\opus\\\\client\\\\src\\\\components\\\\InterfacePage.tsx\";\nimport React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport Pupup from './Pupup';\nimport UserPage from './UserPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass InterfacePage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.popup = (type, name) => {\n      if (name !== undefined) {\n        this.setState({\n          userName: name\n        });\n      }\n\n      this.props.popup(type);\n    };\n\n    this.deleteUser = name => {\n      this.props.deleteUser(name);\n    };\n\n    this.test = () => {\n      let newUsers = [];\n\n      for (let i = 0; i < this.props.users.length; i++) {\n        console.log(this.state.userName);\n        console.log(this.props.name);\n        console.log(this.props.users[i]);\n        newUsers.push(this.props.users.splice(0, 6));\n      }\n\n      return /*#__PURE__*/_jsxDEV(UserPage, {\n        popup: this.popup,\n        users: newUsers[this.state.currentPage]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 12\n      }, this);\n    };\n\n    this.state = {\n      userName: '',\n      currentPage: 0,\n      sortedUsers: []\n    };\n    this.popup = this.popup.bind(this);\n  }\n\n  //delete sortedUsers from state if u dont end up using it\n  //migth also remove username from state => there is a 'name' prop that provides it\n  //also change test to something elase if it works out\n  render() {\n    console.log(this.state);\n    console.log(this.props);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"interfaceContainer\",\n      children: [this.props.openPopup ? /*#__PURE__*/_jsxDEV(Pupup, {\n        deleteUser: this.deleteUser,\n        userName: this.state.userName,\n        addingUser: this.props.addingUser,\n        showMessage: this.props.showMessage,\n        sendCreateAccount: this.props.sendCreateAccount,\n        message: this.props.message,\n        closePopup: this.popup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 31\n      }, this) : null, /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"titleContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: this.props.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              this.popup('add');\n            },\n            children: \"Add user\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"usersListContainer\",\n          children: this.test()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default InterfacePage;","map":{"version":3,"sources":["C:/Users/Me/Desktop/opus/client/src/components/InterfacePage.tsx"],"names":["React","Container","Button","Pupup","UserPage","InterfacePage","Component","constructor","props","popup","type","name","undefined","setState","userName","deleteUser","test","newUsers","i","users","length","console","log","state","push","splice","currentPage","sortedUsers","bind","render","openPopup","addingUser","showMessage","sendCreateAccount","message"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\n\r\nimport Button from 'react-bootstrap/Button'\r\nimport Pupup from './Pupup'\r\nimport UserPage from './UserPage'\r\n\r\nclass InterfacePage extends React.Component<{deleteUser: (name: string) => void, popup: (type: string)=>void, addingUser: boolean, name: string, openPopup: boolean, showMessage: boolean, message:{head: string, body:string}, sendCreateAccount: (data: {email: string, password: string, repeatPassword: string})=>void, users: Array<string>,},{userName: string, currentPage: number, sortedUsers: Array<Array<string>>}> {\r\n\r\n  constructor(props: {users: Array<string>, deleteUser: (name: string) => void, popup: (type: string)=>void, addingUser: boolean, deletingUser: boolean, name: string, openPopup: boolean, showMessage: boolean, message:{head: string, body:string}, sendCreateAccount: (data: {email: string, password: string, repeatPassword: string})=>void}){\r\n    super(props)\r\n    this.state = {\r\n      userName: '',\r\n      currentPage: 0,\r\n      sortedUsers: []\r\n    }\r\n    this.popup = this.popup.bind(this)\r\n  }\r\n\r\n  popup = (type:string, name?: string) =>{\r\n    if(name !== undefined){\r\n      this.setState({userName: name})\r\n    }\r\n    this.props.popup(type)\r\n  }\r\n\r\n  deleteUser = (name: string) =>{\r\n    this.props.deleteUser(name)\r\n  }\r\n/*\r\n  sortUsers = () =>{\r\n    let newUsers: Array<Array<string>> = []\r\n    for(let i =0; i<this.props.users.length; i++){\r\n      newUsers.push(this.props.users.splice(0, 6))\r\n    }\r\n    console.log(newUsers)\r\n    return newUsers\r\n  }\r\n*/\r\n  test = () =>{\r\n    let newUsers: Array<Array<string>> = []\r\n    for(let i =0; i<this.props.users.length; i++){\r\n      console.log(this.state.userName)\r\n      console.log(this.props.name)\r\n      console.log(this.props.users[i])\r\n      newUsers.push(this.props.users.splice(0, 6))\r\n    }\r\n    return <UserPage popup={this.popup} users={newUsers[this.state.currentPage]}/>\r\n  }\r\n//delete sortedUsers from state if u dont end up using it\r\n//migth also remove username from state => there is a 'name' prop that provides it\r\n//also change test to something elase if it works out\r\n  render(){\r\n    console.log(this.state)\r\n    console.log(this.props)\r\n    return(\r\n      <div className='interfaceContainer'>\r\n      {this.props.openPopup ? <Pupup deleteUser={this.deleteUser} userName={this.state.userName} addingUser={this.props.addingUser} showMessage={this.props.showMessage} sendCreateAccount={this.props.sendCreateAccount} message={this.props.message} closePopup={this.popup}/> : null}\r\n      <Container>\r\n      <div className='titleContainer'>\r\n      <h1>{this.props.name}</h1>\r\n      <Button onClick={(()=>{this.popup('add')})}>Add user</Button>\r\n      </div>\r\n      <div className='usersListContainer'>\r\n      {this.test()}\r\n      {/*this.props.users.map((user) => {return user === this.props.name ? null : <User popup={this.popup} key={user} name={user}/>})*/}\r\n      </div>\r\n      </Container>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default InterfacePage\r\n"]},"metadata":{},"sourceType":"module"}