{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Me\\\\Desktop\\\\opus\\\\client\\\\src\\\\components\\\\LogInPage.tsx\";\nimport React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport LogInForm from './LogInForm';\nimport CreateAccountForm from './CreateAccountForm';\nimport RestoreAccountForm from './ResotreAccountForm';\nimport '../App.css';\nimport Alert from 'react-bootstrap/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LogInPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.sendData = (data, url) => {\n      return (data, url) => {\n        async (data, url) => {\n          try {\n            const response = await fetch(`http://localhost:4000/${url}`, {\n              method: 'POST',\n              mode: 'cors',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(data)\n            }).then(response => {\n              if (response.ok) {\n                response.json().then(json => {\n                  console.log(json);\n                  return json;\n                });\n              } else if (!response.ok) {\n                throw Error(response.statusText);\n              }\n            });\n          } catch (error) {\n            console.log(error);\n          }\n        };\n      };\n    };\n\n    this.sendLogin = async data => {\n      console.log(data);\n      const test = await this.sendData(data, 'login');\n      console.log(test);\n    };\n\n    this.state = {\n      logIn: true,\n      createAccount: false,\n      restorePassword: false,\n      showMessage: false,\n      message: {\n        head: '',\n        body: ''\n      }\n    };\n    this.changeFormLogin = this.changeFormLogin.bind(this);\n    this.changeFormCreate = this.changeFormCreate.bind(this);\n    this.changeFormRestore = this.changeFormRestore.bind(this);\n    this.sendLogin = this.sendLogin.bind(this); //this.sendCreateAccount = this.sendCreateAccount.bind(this)\n  }\n\n  /*\r\n    sendLogin = async (data: {email: string, passowrd: string}) =>{\r\n      try{\r\n        const response = await fetch('http://localhost:4000/login',\r\n         {method: 'POST',\r\n          mode: 'cors',\r\n          headers:{'Content-Type' : 'application/json'},\r\n          body: JSON.stringify(data)})\r\n          .then(response => {\r\n            if(response.ok){\r\n              response.json().then(json => {\r\n                console.log(json)\r\n                if(json.status === true){\r\n                  this.props.login()\r\n                }else{\r\n                  this.setState({\r\n                    showMessage: true,\r\n                    message: {head: json.message.head, body: json.message.body}\r\n                  })\r\n                }\r\n              })\r\n            }else if(!response.ok){\r\n              throw Error(response.statusText)\r\n            }\r\n          })\r\n  \r\n      } catch (error){\r\n        console.log(error)\r\n      }\r\n    }\r\n  \r\n    sendCreateAccount = async (data: {email: string, password: string, repeatPassword: string}) =>{\r\n      if(data.password === data.repeatPassword){\r\n        try{\r\n          const response = await fetch('http://localhost:4000/create',\r\n           {method: 'POST',\r\n            mode: 'cors',\r\n            headers:{'Content-Type' : 'application/json'},\r\n            body: JSON.stringify(data)})\r\n            .then(response => {\r\n              if(response.ok){\r\n                response.json().then(json => {\r\n                  console.log(json)\r\n                  if(json.status === true){\r\n                    this.props.login()\r\n                  }else{\r\n                    this.setState({\r\n                      showMessage: true,\r\n                      message: {head: json.message.head, body: json.message.body}\r\n                    })\r\n                  }\r\n                })\r\n              }else if(!response.ok){\r\n                throw Error(response.statusText)\r\n              }\r\n            })\r\n  \r\n        } catch (error){\r\n          console.log(error)\r\n        }\r\n      }else{\r\n        this.setState({\r\n          showMessage: true,\r\n          message: {head: 'Passwords dont match', body: 'Check that both password fields are the same.'}\r\n        })\r\n      }\r\n    }\r\n    */\n  sendResetPassword() {\n    console.log('send reset password data');\n  }\n\n  changeFormCreate() {\n    this.setState({\n      logIn: false,\n      createAccount: true,\n      restorePassword: false,\n      showMessage: false\n    });\n  }\n\n  changeFormRestore() {\n    this.setState({\n      logIn: false,\n      createAccount: false,\n      restorePassword: true,\n      showMessage: false\n    });\n  }\n\n  changeFormLogin() {\n    this.setState({\n      logIn: true,\n      createAccount: false,\n      restorePassword: false,\n      showMessage: false\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"loginContainer\",\n      children: [this.state.logIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(LogInForm, {\n          sendLogin: this.sendLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttonContainer\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.changeFormCreate,\n            variant: \"link\",\n            children: \"Create an account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.changeFormRestore,\n            variant: \"link\",\n            children: \"Forgot the password? - Restore password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 8\n      }, this) : null, this.state.createAccount ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(CreateAccountForm, {\n          sendCreateAccount: this.sendCreateAccount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttonContainer\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.changeFormLogin,\n            variant: \"link\",\n            children: \"Already have an account? - Log in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.changeFormRestore,\n            variant: \"link\",\n            children: \"Forgot the password? - Restore password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 7\n      }, this) : null, this.state.restorePassword ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(RestoreAccountForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttonContainer\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.changeFormCreate,\n            variant: \"link\",\n            children: \"Create an account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.changeFormLogin,\n            variant: \"link\",\n            children: \"Already have an account? - Log in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 7\n      }, this) : null, this.state.showMessage ? /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        className: \"loginAlert\",\n        children: [/*#__PURE__*/_jsxDEV(Alert.Heading, {\n          children: this.state.message.head\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.message.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 8\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default LogInPage;","map":{"version":3,"sources":["C:/Users/Me/Desktop/opus/client/src/components/LogInPage.tsx"],"names":["React","Button","LogInForm","CreateAccountForm","RestoreAccountForm","Alert","LogInPage","Component","constructor","props","sendData","data","url","response","fetch","method","mode","headers","body","JSON","stringify","then","ok","json","console","log","Error","statusText","error","sendLogin","test","state","logIn","createAccount","restorePassword","showMessage","message","head","changeFormLogin","bind","changeFormCreate","changeFormRestore","sendResetPassword","setState","render","sendCreateAccount"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport LogInForm from './LogInForm'\r\nimport CreateAccountForm from './CreateAccountForm'\r\nimport RestoreAccountForm from './ResotreAccountForm'\r\nimport '../App.css'\r\nimport Alert from 'react-bootstrap/Alert'\r\n\r\n\r\n\r\n\r\nclass LogInPage extends React.Component<{login: () => void}, {logIn: boolean, createAccount: boolean, restorePassword: boolean, showMessage: boolean, message: {head: string, body: string}}>{\r\n\r\n  constructor(props: any){\r\n    super(props)\r\n    this.state ={\r\n      logIn: true,\r\n      createAccount: false,\r\n      restorePassword: false,\r\n      showMessage: false,\r\n      message: {head: '', body: ''}\r\n    }\r\n    this.changeFormLogin = this.changeFormLogin.bind(this)\r\n    this.changeFormCreate = this.changeFormCreate.bind(this)\r\n    this.changeFormRestore = this.changeFormRestore.bind(this)\r\n    this.sendLogin = this.sendLogin.bind(this)\r\n    //this.sendCreateAccount = this.sendCreateAccount.bind(this)\r\n  }\r\n\r\n  sendData = (data:any, url:string) => {\r\n    return ((data:any, url:string)=>{\r\n      async(data: {email: string, password: string}, url: string) =>{\r\n        try{\r\n          const response = await fetch(`http://localhost:4000/${url}`,\r\n          {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            headers:{'Content-Type' : 'application/json'},\r\n            body: JSON.stringify(data)\r\n          })\r\n          .then(response => {\r\n            if(response.ok){\r\n              response.json().then(json =>{\r\n                console.log(json)\r\n                return json\r\n              })\r\n            }else if(!response.ok){\r\n              throw Error(response.statusText)\r\n            }\r\n          })\r\n        }catch(error){\r\n          console.log(error)\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  sendLogin = async (data: {email: string, password: string}) =>{\r\n    console.log(data)\r\n    const test = await this.sendData(data, 'login')\r\n    console.log(test)\r\n  }\r\n\r\n/*\r\n  sendLogin = async (data: {email: string, passowrd: string}) =>{\r\n    try{\r\n      const response = await fetch('http://localhost:4000/login',\r\n       {method: 'POST',\r\n        mode: 'cors',\r\n        headers:{'Content-Type' : 'application/json'},\r\n        body: JSON.stringify(data)})\r\n        .then(response => {\r\n          if(response.ok){\r\n            response.json().then(json => {\r\n              console.log(json)\r\n              if(json.status === true){\r\n                this.props.login()\r\n              }else{\r\n                this.setState({\r\n                  showMessage: true,\r\n                  message: {head: json.message.head, body: json.message.body}\r\n                })\r\n              }\r\n            })\r\n          }else if(!response.ok){\r\n            throw Error(response.statusText)\r\n          }\r\n        })\r\n\r\n    } catch (error){\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  sendCreateAccount = async (data: {email: string, password: string, repeatPassword: string}) =>{\r\n    if(data.password === data.repeatPassword){\r\n      try{\r\n        const response = await fetch('http://localhost:4000/create',\r\n         {method: 'POST',\r\n          mode: 'cors',\r\n          headers:{'Content-Type' : 'application/json'},\r\n          body: JSON.stringify(data)})\r\n          .then(response => {\r\n            if(response.ok){\r\n              response.json().then(json => {\r\n                console.log(json)\r\n                if(json.status === true){\r\n                  this.props.login()\r\n                }else{\r\n                  this.setState({\r\n                    showMessage: true,\r\n                    message: {head: json.message.head, body: json.message.body}\r\n                  })\r\n                }\r\n              })\r\n            }else if(!response.ok){\r\n              throw Error(response.statusText)\r\n            }\r\n          })\r\n\r\n      } catch (error){\r\n        console.log(error)\r\n      }\r\n    }else{\r\n      this.setState({\r\n        showMessage: true,\r\n        message: {head: 'Passwords dont match', body: 'Check that both password fields are the same.'}\r\n      })\r\n    }\r\n  }\r\n  */\r\n\r\n  sendResetPassword(){\r\n    console.log('send reset password data')\r\n  }\r\n\r\n  changeFormCreate(){\r\n    this.setState({\r\n      logIn: false,\r\n      createAccount: true,\r\n      restorePassword: false,\r\n      showMessage: false\r\n    })\r\n  }\r\n\r\n  changeFormRestore(){\r\n    this.setState({\r\n      logIn: false,\r\n      createAccount: false,\r\n      restorePassword: true,\r\n      showMessage: false,\r\n    })\r\n  }\r\n\r\n  changeFormLogin(){\r\n    this.setState({\r\n      logIn: true,\r\n      createAccount: false,\r\n      restorePassword: false,\r\n      showMessage: false,\r\n    })\r\n  }\r\n\r\n  render(){\r\n  return(\r\n    <div id='loginContainer'>\r\n    {this.state.logIn ?\r\n       <div>\r\n        <LogInForm sendLogin={this.sendLogin}/>\r\n        <div className='buttonContainer'>\r\n        <Button onClick={this.changeFormCreate} variant='link'>Create an account</Button>\r\n        <Button onClick={this.changeFormRestore} variant='link'>Forgot the password? - Restore password</Button>\r\n        </div>\r\n       </div>\r\n    : null}\r\n\r\n    {this.state.createAccount ?\r\n      <div>\r\n        <CreateAccountForm sendCreateAccount={this.sendCreateAccount}/>\r\n        <div className='buttonContainer'>\r\n        <Button onClick={this.changeFormLogin} variant='link'>Already have an account? - Log in</Button>\r\n        <Button onClick={this.changeFormRestore} variant='link'>Forgot the password? - Restore password</Button>\r\n        </div>\r\n      </div>\r\n    :null}\r\n\r\n    {this.state.restorePassword ?\r\n      <div>\r\n        <RestoreAccountForm/>\r\n        <div className='buttonContainer'>\r\n        <Button onClick={this.changeFormCreate} variant='link'>Create an account</Button>\r\n        <Button onClick={this.changeFormLogin} variant='link'>Already have an account? - Log in</Button>\r\n        </div>\r\n      </div>\r\n    :null}\r\n    {this.state.showMessage ?\r\n       <Alert variant='danger' className='loginAlert'>\r\n       <Alert.Heading>{this.state.message.head}</Alert.Heading>\r\n       <p>{this.state.message.body}</p>\r\n       </Alert>\r\n        : null}\r\n    </div>\r\n  )\r\n  }\r\n}\r\n\r\nexport default LogInPage\r\n"]},"metadata":{},"sourceType":"module"}