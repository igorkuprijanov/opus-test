{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Me\\\\Desktop\\\\opus\\\\client\\\\src\\\\components\\\\Main.tsx\";\nimport React from 'react';\nimport LogInPage from './LogInPage';\nimport InterfacePage from './InterfacePage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.sendData = async (data, url, method) => {\n      let headers = new Headers();\n      headers.append('Content-Type', 'application/json');\n      headers.append('Accept', 'application/json');\n      headers.append('Access-Control-Allow-Origin', 'http://localhost:4000');\n      headers.append('Access-Control-Allow-Credentials', 'true');\n      const response = await fetch(`http://localhost:4000/${url}`, {\n        method: method,\n        mode: 'cors',\n        headers: headers,\n        credentials: 'include',\n        body: JSON.stringify(data)\n      }).then(response => {\n        console.log(response);\n\n        if (response.ok) {\n          return response.json().then(json => {\n            return json;\n          });\n        } else if (!response.ok) {\n          console.log(Error(response.statusText));\n        }\n      });\n      return response;\n    };\n\n    this.sendLogin = async data => {\n      const response = await this.sendData(data, 'login', 'POST');\n\n      if (response.status) {\n        this.setState({\n          isLoggedIn: true,\n          user: data.email.toString(),\n          showMessage: false,\n          message: {\n            head: '',\n            body: ''\n          }\n        });\n      } else {\n        this.setState({\n          showMessage: true,\n          message: {\n            head: response.data.head,\n            body: response.data.body\n          }\n        });\n      }\n    };\n\n    this.sendCreateAccount = async data => {\n      if (data.password === data.repeatPassword) {\n        const response = await this.sendData(data, 'registration', 'POST');\n\n        if (response.status) {\n          if (this.state.openPopup) {\n            this.setState({\n              openPopup: false,\n              unsortedUsers: [...this.state.unsortedUsers, data.email],\n              sortedUsers: this.sortUsers([...this.state.unsortedUsers, data.email])\n            });\n          }\n\n          this.setState({\n            showMessage: true,\n            message: {\n              head: response.data.head,\n              body: response.data.body\n            }\n          });\n        } else if (!response.status) {\n          this.setState({\n            showMessage: true,\n            message: {\n              head: response.data.head,\n              body: response.data.body\n            }\n          });\n        }\n      } else {\n        this.setState({\n          showMessage: true,\n          message: {\n            head: 'Passwords dont match',\n            body: 'Check that both password fields are the same.'\n          }\n        });\n      }\n    };\n\n    this.deleteUser = async name => {\n      await this.sendData({\n        name\n      }, 'delete', 'DELETE').then(response => {\n        if (!response.status) {\n          alert('Could not delete user, please try again');\n        } else {\n          this.popup('delete');\n          let newUsers = this.state.unsortedUsers;\n          let userIndex = newUsers.indexOf(name);\n          newUsers.splice(userIndex, 1);\n          this.setState({\n            unsortedUsers: newUsers,\n            sortedUsers: this.sortUsers(newUsers)\n          });\n        }\n      });\n    };\n\n    this.sendResetPassword = async data => {\n      const response = await this.sendData(data, 'restore', 'POST');\n      this.setState({\n        showMessage: true,\n        message: {\n          head: response.message.head,\n          body: response.message.body\n        }\n      });\n    };\n\n    this.hideMessage = () => {\n      this.setState({\n        showMessage: false\n      });\n    };\n\n    this.sortUsers = data => {\n      let newUsers = [];\n      console.log(this.state.unsortedUsers);\n      console.log(newUsers);\n\n      for (let i = 0; i < data.length; i++) {\n        let sliceableArray = data.slice(i * 6, 6 * (i + 1));\n        if (sliceableArray.length > 0) newUsers.push(sliceableArray);\n      }\n\n      console.log(newUsers);\n      console.log(this.state.sortedUsers);\n      console.log(data);\n      return newUsers;\n    };\n\n    this.popup = type => {\n      if (type === 'add') {\n        this.setState({\n          openPopup: !this.state.openPopup,\n          addingUser: true\n        });\n      } else {\n        this.setState({\n          openPopup: !this.state.openPopup,\n          addingUser: false\n        });\n      }\n    };\n\n    this.state = {\n      isLoggedIn: false,\n      user: '',\n      showMessage: false,\n      message: {\n        body: '',\n        head: ''\n      },\n      openPopup: false,\n      addingUser: false,\n      unsortedUsers: [],\n      sortedUsers: []\n    };\n    this.sendData = this.sendData.bind(this);\n    this.sendLogin = this.sendLogin.bind(this);\n    this.sendCreateAccount = this.sendCreateAccount.bind(this);\n    this.sendResetPassword = this.sendResetPassword.bind(this);\n  }\n\n  async componentDidMount() {\n    try {\n      await fetch(`http://localhost:4000/users`, {\n        method: 'GET',\n        mode: 'cors',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        if (response.ok) {\n          return response.json().then(json => {\n            this.setState({\n              unsortedUsers: json,\n              sortedUsers: this.sortUsers(json)\n            });\n          });\n        } else if (!response.ok) {\n          throw Error(response.statusText);\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    console.log(this.state);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: this.state.isLoggedIn ? /*#__PURE__*/_jsxDEV(InterfacePage, {\n        users: this.state.sortedUsers,\n        deleteUser: this.deleteUser,\n        addingUser: this.state.addingUser,\n        popup: this.popup,\n        openPopup: this.state.openPopup,\n        showMessage: this.state.showMessage,\n        sendCreateAccount: this.sendCreateAccount,\n        message: this.state.message,\n        name: this.state.user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 34\n      }, this) : /*#__PURE__*/_jsxDEV(LogInPage, {\n        hideMessage: this.hideMessage,\n        showMessage: this.state.showMessage,\n        message: this.state.message,\n        sendLogin: this.sendLogin,\n        sendCreateAccount: this.sendCreateAccount,\n        sendResetPassword: this.sendResetPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 332\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["C:/Users/Me/Desktop/opus/client/src/components/Main.tsx"],"names":["React","LogInPage","InterfacePage","Main","Component","constructor","props","sendData","data","url","method","headers","Headers","append","response","fetch","mode","credentials","body","JSON","stringify","then","console","log","ok","json","Error","statusText","sendLogin","status","setState","isLoggedIn","user","email","toString","showMessage","message","head","sendCreateAccount","password","repeatPassword","state","openPopup","unsortedUsers","sortedUsers","sortUsers","deleteUser","name","alert","popup","newUsers","userIndex","indexOf","splice","sendResetPassword","hideMessage","i","length","sliceableArray","slice","push","type","addingUser","bind","componentDidMount","error","render"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport LogInPage from './LogInPage'\r\nimport InterfacePage from './InterfacePage'\r\n\r\nclass Main extends React.Component<{}, {sortedUsers: Array<Array<string>>, unsortedUsers: Array<string>, isLoggedIn: boolean, addingUser: boolean, user:string, showMessage: boolean, message: {head: string, body: string}, openPopup: boolean}>{\r\n\r\n  constructor(props: any){\r\n    super(props)\r\n    this.state = {\r\n      isLoggedIn: false,\r\n      user: '',\r\n      showMessage: false,\r\n      message: {body: '', head: ''},\r\n      openPopup: false,\r\n      addingUser: false,\r\n      unsortedUsers: [],\r\n      sortedUsers: []\r\n\r\n    }\r\n    this.sendData = this.sendData.bind(this)\r\n    this.sendLogin = this.sendLogin.bind(this)\r\n    this.sendCreateAccount = this.sendCreateAccount.bind(this)\r\n    this.sendResetPassword = this.sendResetPassword.bind(this)\r\n  }\r\n\r\n  sendData = async (data:any, url:string, method: string) => {\r\n    let headers = new Headers()\r\n\r\n    headers.append('Content-Type', 'application/json')\r\n    headers.append('Accept', 'application/json')\r\n    headers.append('Access-Control-Allow-Origin', 'http://localhost:4000')\r\n    headers.append('Access-Control-Allow-Credentials', 'true')\r\n\r\n          const response =  await fetch(`http://localhost:4000/${url}`,\r\n          {\r\n            method: method,\r\n            mode: 'cors',\r\n            headers:headers,\r\n            credentials: 'include',\r\n            body: JSON.stringify(data)\r\n          })\r\n          .then(response => {\r\n            console.log(response)\r\n            if(response.ok){\r\n                return response.json().then(json =>{\r\n                return json\r\n              })\r\n            }else if(!response.ok){\r\n              console.log(Error(response.statusText))\r\n            }\r\n          })\r\n          return response\r\n\r\n\r\n  }\r\n\r\n  sendLogin = async (data: {email: string, password: string}) =>{\r\n    const response = await this.sendData(data, 'login', 'POST')\r\n    if(response.status){\r\n      this.setState({isLoggedIn: true, user: data.email.toString(), showMessage: false, message: {head: '', body: ''}})\r\n    }else{\r\n      this.setState({\r\n        showMessage: true,\r\n        message: {head: response.data.head, body: response.data.body}\r\n      })\r\n    }\r\n  }\r\n\r\n  sendCreateAccount = async (data: {email: string, password: string, repeatPassword: string}) =>{\r\n    if(data.password === data.repeatPassword){\r\n        const response = await this.sendData(data, 'registration', 'POST')\r\n        if(response.status){\r\n          if(this.state.openPopup){\r\n            this.setState({\r\n              openPopup: false,\r\n              unsortedUsers: [...this.state.unsortedUsers, data.email],\r\n              sortedUsers: this.sortUsers([...this.state.unsortedUsers, data.email])\r\n            })\r\n          }\r\n          this.setState({\r\n            showMessage: true,\r\n            message: {head: response.data.head, body:response.data.body}\r\n          })\r\n        }else if(!response.status){\r\n          this.setState({\r\n            showMessage: true,\r\n            message: {head: response.data.head, body:response.data.body}\r\n          })\r\n        }\r\n    }else{\r\n      this.setState({\r\n        showMessage: true,\r\n        message: {head: 'Passwords dont match', body: 'Check that both password fields are the same.'}\r\n      })\r\n    }\r\n  }\r\n\r\n  deleteUser = async (name: string) =>{\r\n    await this.sendData({name}, 'delete', 'DELETE')\r\n    .then(response => {if(!response.status){\r\n      alert('Could not delete user, please try again')\r\n    }else{\r\n      this.popup('delete')\r\n      let newUsers = this.state.unsortedUsers\r\n      let userIndex = newUsers.indexOf(name)\r\n      newUsers.splice(userIndex, 1)\r\n      this.setState({\r\n        unsortedUsers: newUsers,\r\n        sortedUsers: this.sortUsers(newUsers)\r\n      })\r\n\r\n    }})\r\n  }\r\n\r\n  async componentDidMount(){\r\n    try{\r\n    await fetch(`http://localhost:4000/users`,\r\n    {\r\n      method: 'GET',\r\n      mode: 'cors',\r\n      headers:{'Content-Type' : 'application/json'},\r\n    })\r\n    .then(response => {\r\n      if(response.ok){\r\n          return response.json()\r\n          .then(json =>{\r\n          this.setState({\r\n            unsortedUsers: json,\r\n            sortedUsers: this.sortUsers(json)\r\n          })\r\n        })\r\n      }else if(!response.ok){\r\n        throw Error(response.statusText)\r\n      }\r\n    })\r\n  }catch (error){\r\n    console.log(error)\r\n  }\r\n  }\r\n\r\n\r\n  sendResetPassword = async(data: {email: string}) =>{\r\n    const response = await this.sendData(data, 'restore', 'POST')\r\n    this.setState({\r\n      showMessage: true,\r\n      message: {head: response.message.head, body:response.message.body}\r\n    })\r\n  }\r\n\r\n  hideMessage = () =>{\r\n    this.setState({\r\n      showMessage: false\r\n    })\r\n  }\r\n\r\n  sortUsers = (data: Array<string>) =>{\r\n    let newUsers: Array<Array<string>> = []\r\n    console.log(this.state.unsortedUsers)\r\n    console.log(newUsers)\r\n    for(let i =0; i<data.length; i++){\r\n      let sliceableArray = data.slice(i*6, 6*(i+1))\r\n      if(sliceableArray.length > 0)\r\n        newUsers.push(sliceableArray)\r\n      }\r\n    console.log(newUsers)\r\n    console.log(this.state.sortedUsers)\r\n    console.log(data)\r\n    return newUsers\r\n  }\r\n\r\n  popup = (type: string) =>{\r\n    if(type === 'add'){\r\n      this.setState({\r\n        openPopup: !this.state.openPopup,\r\n        addingUser: true\r\n      })\r\n    }else{\r\n      this.setState({\r\n        openPopup: !this.state.openPopup,\r\n        addingUser: false\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  render(){\r\n    console.log(this.state)\r\n    return (\r\n      <div className=\"App\">\r\n        {this.state.isLoggedIn ? <InterfacePage users={this.state.sortedUsers} deleteUser={this.deleteUser} addingUser={this.state.addingUser} popup={this.popup} openPopup={this.state.openPopup} showMessage={this.state.showMessage} sendCreateAccount={this.sendCreateAccount} message={this.state.message} name={this.state.user}/> : <LogInPage hideMessage={this.hideMessage} showMessage={this.state.showMessage} message={this.state.message} sendLogin={this.sendLogin} sendCreateAccount={this.sendCreateAccount} sendResetPassword={this.sendResetPassword}/>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main\r\n"]},"metadata":{},"sourceType":"module"}